<?php

namespace App\Repositories;

use App\Models\BlogCategory as Model;
use Illuminate\Database\Eloquent\Collection;
use Illuminate\Support\Facades\DB;

class BlogCategoryRepository extends CoreRepository
{

    /* @param int $id
     * @return Model
     */


    protected function getModelClass()
    {
        return Model::class;
    }

    protected function startConditions()
    {
        return clone $this->model;// TODO: Change the autogenerated stub
    }

    public function getAllWithPaginate($perPage = null)
    {
        $columns = ['id','title','parent_id'];

        $result = $this
            ->startConditions()
            ->select($columns)
            ->paginate($perPage);
        dd($result);
        return $result;
    }


    public function getEdit($id){
        return $this->startConditions()->find($id);
    }


    public function getForComboBox()
    {

        //return $this->startConditions()->all();

        $columns = implode(', ',[
           'id',
           'concat (id, \'. \', title) AS id_title',
        ]);

        /*
        $result[] = $this->startConditions()->all();

        $result[] = $this
            ->startConditions()
            ->select('blog_categories.*',
                \DB::raw('concat (id, \'. \', title) AS title'))
            ->toBase()
            ->get();
        */

        $result = $this
            ->startConditions()
            ->selectRaw($columns)
            ->toBase()
            ->OrderBy('id')
            ->get();

       // $result = $result->sortBy('id');
        return $result;
    }
}
